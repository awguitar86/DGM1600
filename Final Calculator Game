  using System.Collections;
  using System.Collections.Generic;
  using UnityEngine;
  using UnityEngine.UI;
  
  public class CalculatorGame : MonoBehaviour {
	
	public InputField leftInput;
	public InputField rightInput;
	public Text result;
	public Text dropOne;
	public Text dropTwo;
	public Text dropThree;
	public Text dropFour;
	public Text gameOver;
	public Text gamePoints;

	private float fallSpeedOne = 5.0f;
	private float fallSpeedTwo= 5.0f;
	private float fallSpeedThree = 5.0f;
	private float fallSpeedFour = 5.0f;


	private GameObject dropObjOne;
	private GameObject dropObjTwo;
	private GameObject dropObjThree;
	private GameObject dropObjFour;
	private int disabledButtons = 0;
	private int lowNum = 1;
	private int highNum = 200;
	private int randomNum;
	private int counter = 0;
	private int points = 0;
	public int destroyCounter = 0;
	private string endGame = "Game Over";


	private Button addButton;
	private Button subButton;
	private Button multButton;
	private Button divButton;


	// Use this for initialization
	void Start () {
		RandomNumberOne ();
		RandomNumberTwo ();
		RandomNumberThree ();
		RandomNumberFour ();

		dropObjOne = dropOne.gameObject;
		dropObjOne.GetComponent<Rigidbody2D> ().velocity = new Vector2 (0, -fallSpeedOne);
		dropObjTwo = dropTwo.gameObject;
		dropObjTwo.GetComponent<Rigidbody2D> ().velocity = new Vector2 (0, -fallSpeedTwo);
		dropObjThree = dropThree.gameObject;
		dropObjThree.GetComponent<Rigidbody2D> ().velocity = new Vector2 (0, -fallSpeedThree);
		dropObjFour = dropFour.gameObject;
		dropObjFour.GetComponent<Rigidbody2D> ().velocity = new Vector2 (0, -fallSpeedFour);

		addButton = GameObject.Find ("Add").GetComponent<Button>();
		subButton = GameObject.Find ("Subtract").GetComponent<Button>();
		multButton = GameObject.Find ("Multiply").GetComponent<Button>();
		divButton = GameObject.Find ("Divide").GetComponent<Button>();

	}

	void Update () {
		DestroyObjectOne ();
		DestroyObjectTwo ();
		DestroyObjectThree ();
		DestroyObjectFour ();
		GamePoints ();
	}


	public void Add ( ){
		float addNum;
		addNum = float.Parse (leftInput.text) + float.Parse (rightInput.text);
		result.text = addNum.ToString ();
		CheckResult ();
		addButton.interactable = false;
		disabledButtons += 1;
		ResetButtons ();
	}

	public void Subtract (){
		float subtractNum;
		subtractNum = float.Parse (leftInput.text) - float.Parse (rightInput.text);
		result.text = subtractNum.ToString ();
		CheckResult ();
		subButton.interactable = false;
		disabledButtons += 1;
		ResetButtons ();
	}

	public void Multiply (){
		float multiplyNum;
		multiplyNum = float.Parse (leftInput.text) * float.Parse (rightInput.text);
		result.text = multiplyNum.ToString ();
		CheckResult ();
		multButton.interactable = false;
		disabledButtons += 1;
		ResetButtons ();
	}

	public void Divide (){
		float divideNum;
		divideNum = float.Parse (leftInput.text) / float.Parse (rightInput.text);
		result.text = divideNum.ToString ();
		CheckResult ();
		divButton.interactable = false;
		disabledButtons += 1;
		ResetButtons ();
	}

	public void RandomNumberOne(){
		randomNum = Random.Range (lowNum, highNum);
		dropOne.text = randomNum.ToString ();
	}

	public void RandomNumberTwo(){
		randomNum = Random.Range (lowNum, highNum);
		dropTwo.text = randomNum.ToString ();
	}

	public void RandomNumberThree(){
		randomNum = Random.Range (lowNum, highNum);
		dropThree.text = randomNum.ToString ();
	}

	public void RandomNumberFour(){
		randomNum = Random.Range (lowNum, highNum);
		dropFour.text = randomNum.ToString ();
	}

	public void CheckResult(){
		if (result.text == dropOne.text) {
			print ("Numbers match");
			RandomNumberOne ();
			dropObjOne.transform.localPosition = new Vector3 (-269, 240f, 22);
			points += 1;
		} else if (result.text == dropTwo.text) {
			RandomNumberTwo ();
			dropObjTwo.transform.localPosition = new Vector3 (-167, 240f, 22);
			points += 1;
		} else if (result.text == dropThree.text) {
			RandomNumberThree ();
			dropObjThree.transform.localPosition = new Vector3 (-66, 240f, 22);
			points += 1;
		} else if (result.text == dropFour.text) {
			RandomNumberFour ();
			dropObjFour.transform.localPosition = new Vector3 (31, 240f, 22);
			points += 1;
		} else {
			print ("Numbers don't match");
		}
	}

	public void ResetButtons()
	{
		if (disabledButtons >= 4) 
		{
			addButton.interactable = true;
			subButton.interactable = true;
			multButton.interactable = true;
			divButton.interactable = true;
			disabledButtons = 0;
		}
	}

	public void DestroyObjectOne()
	{
		if (dropObjOne.transform.localPosition.y <= -138f)
		{
			dropObjOne.SetActive (false);
			destroyCounter += 1;
		}
	}

	public void DestroyObjectTwo()
	{
		if (dropObjTwo.transform.localPosition.y <= -138f) 
		{
			dropObjTwo.SetActive (false);
			destroyCounter += 1;
		}
	}

	public void DestroyObjectThree()
	{
		if (dropObjThree.transform.localPosition.y <= -138f) 
		{
			dropObjThree.SetActive (false);
			destroyCounter += 1;
		}
	}

	public void DestroyObjectFour()
	{
		if (dropObjFour.transform.localPosition.y <= -138f) 
		{
			dropObjFour.SetActive (false);
			destroyCounter += 1;
		}
	}

	public void GameOver()
	{
		if (destroyCounter >= 4)
		{
			gameOver.text = endGame;
		}
	}

	public void GamePoints()
	{
		gamePoints.text = points.ToString ();
	}


}
